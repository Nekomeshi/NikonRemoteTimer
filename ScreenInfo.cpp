#include "ScreenInfo.h"


void drawFrame(Adafruit_SSD1306 *scrn, int l, int t, int w, int h){
	scrn->drawFastVLine(l	, t, 	h, WHITE);
  	scrn->drawFastVLine(l+w	, t, 	h, WHITE);
  	scrn->drawFastHLine(l	, t,	w, WHITE);
  	scrn->drawFastHLine(l	, t+h,	w, WHITE);
}



const unsigned char PROGMEM Resources::up_bmp[] =
{ 
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000001,B10000000,
	B00000011,B11000000,
	B00000011,B11000000,
	B00000111,B11100000,
	B00001111,B11110000,
	B00001111,B11110000,
	B00011111,B11111000,
	B00111111,B11111100,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000
};
const unsigned char PROGMEM Resources::up_inv_bmp[] =
{ 
	B00001111,B11110000,
	B00111111,B11111100,
	B01111111,B11111110,
	B01111111,B11111110,
	B11111110,B01111111,
	B11111100,B00111111,
	B11111100,B00111111,
	B11111000,B00011111,
	B11110000,B00001111,
	B11110000,B00001111,
	B11100000,B00000111,
	B11000000,B00000011,
	B01111111,B11111110,
	B01111111,B11111110,
	B00111111,B11111100,
	B00001111,B11110000	
};

const unsigned char PROGMEM Resources::down_bmp[] =
{ 
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00111111,B11111100,
	B00011111,B11111000,
	B00001111,B11110000,
	B00001111,B11110000,
	B00000111,B11100000,
	B00000011,B11000000,
	B00000011,B11000000,
	B00000001,B10000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00000000	
};
const unsigned char PROGMEM Resources::down_inv_bmp[] =
{ 
	B00001111,B11110000,
	B00111111,B11111100,
	B01111111,B11111110,
	B01111111,B11111110,
	B11000000,B00000011,
	B11100000,B00000111,
	B11110000,B00001111,
	B11110000,B00001111,
	B11111000,B00011111,
	B11111100,B00111111,
	B11111100,B00111111,
	B11111110,B01111111,
	B01111111,B11111110,
	B01111111,B11111110,
	B00111111,B11111100,
	B00001111,B11110000	
};

const unsigned char PROGMEM Resources::ok_bmp[] =
{ 
	B00000000,B00000000,
	B00000000,B00000000,
	B00000000,B00001000,
	B00000000,B00011100,
	B00000000,B00111110,
	B00000000,B00111110,
	B00110000,B01111100,
	B01111000,B11111000,
	B01111101,B11110000,
	B00111111,B11100000,
	B00011111,B11000000,
	B00001111,B10000000,
	B00000111,B00000000,
	B00000010,B00000000,
	B00000000,B00000000,
	B00000000,B00000000
};

const unsigned char PROGMEM Resources::ok_inv_bmp[] =
{ 
	B00001111,B11110000,
	B00111111,B11111100,
	B01111111,B11110110,
	B01111111,B11100010,
	B11111111,B11000001,
	B11111111,B11000001,
	B11001111,B10000011,
	B10000111,B00000111,
	B10000010,B00001111,
	B11000000,B00011111,
	B11100000,B00111111,
	B11110000,B01111111,
	B01111000,B11111110,
	B01111101,B11111110,
	B00111111,B11111100,
	B00001111,B11110000
};

const unsigned char PROGMEM Resources::cancel_bmp[] =
{ 
	B00000000,B00000000,
	B00000000,B00000000,
	B00001000,B00010000,
	B00011100,B00111000,
	B00111110,B01111100,
	B00011111,B11111000,
	B00001111,B11110000,
	B00000111,B11100000,
	B00000111,B11100000,
	B00001111,B11110000,
	B00011111,B11111000,
	B00111110,B01111100,
	B00011100,B00111000,
	B00001000,B00010000,
	B00000000,B00000000,
	B00000000,B00000000
};
const unsigned char PROGMEM Resources::cancel_inv_bmp[] =
{ 
	B00001111,B11110000,
	B00111111,B11111100,
	B01110111,B11101110,
	B01100011,B11000110,
	B11000001,B10000011,
	B11100000,B00000111,
	B11110000,B00001111,
	B11111000,B00011111,
	B11111000,B00011111,
	B11110000,B00001111,
	B11100000,B00000111,
	B11000001,B10000011,
	B01100011,B11000110,
	B01110111,B11101110,
	B00111111,B11111100,
	B00001111,B11110000
};
const unsigned char PROGMEM Resources::bt_bmp[] =
{
	B00000000,B00000000,
	B00000001,B10000000,
	B00000001,B11000000,
	B00011001,B11100000,
	B00011101,B10110000,
	B00001111,B10110000,
	B00000111,B11100000,
	B00000011,B11000000,
	B00000011,B11000000,
	B00000111,B11100000,
	B00001111,B10110000,
	B00011101,B10110000,
	B00011001,B11100000,
	B00000001,B11000000,
	B00000001,B10000000,
	B00000000,B00000000
};

const unsigned char PROGMEM Resources::bt_connected_bmp[] =
{
	B00000000,B00000000,
	B00000001,B10000000,
	B00000001,B11000000,
	B00011001,B11100000,
	B00011101,B10110000,
	B00001111,B11110000,
	B00000111,B11100000,
	B00110011,B11001100,
	B00110011,B11001100,
	B00000111,B11100000,
	B00001111,B11110000,
	B00011101,B10110000,
	B00011001,B11100000,
	B00000001,B11000000,
	B00000001,B10000000,
	B00000000,B00000000
};


const unsigned char PROGMEM Resources::bt_disabled_bmp[] =
{ 
	B00000000,B00000000,
	B00000001,B10000000,
	B00010001,B11000000,
	B00111001,B11100000,
	B00011101,B10110000,
	B00001110,B01110000,
	B00000111,B01100000,
	B00000011,B10000000,
	B00000011,B11000000,
	B00000111,B11100000,
	B00001111,B10110000,
	B00011101,B10111000,
	B00011001,B11111100,
	B00000001,B11001000,
	B00000001,B10000000,
	B00000000,B00000000
};

const unsigned char PROGMEM Resources::note_bmp[] =
{
	B00000000,B10000000,
	B00000000,B11000000,
	B00000000,B11100000,
	B00000000,B11110000,
	B00000000,B11110000,
	B00000000,B11111000,
	B00000000,B11011000,
	B00000000,B11001100,
	B00000000,B11001100,
	B00000000,B11001000,
	B00000110,B11011000,
	B00001111,B11010000,
	B00011111,B11000000,
	B00011111,B10000000,
	B00011111,B10000000,
	B00001111,B00000000
};
/*
const unsigned char PROGMEM Resources::note_inv_bmp[] =
{
	B11111111,B01111111,
	B11111111,B00111111,
	B11111111,B00011111,
	B11111111,B00001111,
	B11111111,B00001111,
	B11111111,B00000111,
	B11111111,B00100111,
	B11111111,B00110011,
	B11111111,B00110011,
	B11111111,B00110111,
	B11111001,B00100111,
	B11110000,B00101111,
	B11100000,B00111111,
	B11100000,B01111111,
	B11100000,B01111111,
	B11110000,B11111111
};
*/

const unsigned char PROGMEM Resources::no_note_bmp[] =
{
	B00000000,B10000000,
	B00000000,B11000000,
	B00000000,B11100000,
	B00000000,B11110010,
	B00000000,B11100110,
	B00000000,B10011110,
	B00000000,B01111000,
	B00000001,B11101100,
	B00000111,B10001100,
	B00011110,B01001000,
	B01111000,B11011000,
	B11110011,B11010000,
	B11001111,B11000000,
	B00011111,B10000000,
	B00011111,B10000000,
	B00001111,B00000000
};

const unsigned char PROGMEM Resources::camera_bmp[] =
{
	B00000000,B00000000,
	B00000011,B11000000,
	B00001111,B11110000,
	B00001111,B11110000,
	B11111111,B11111111,
	B11111110,B01111111,
	B11111000,B00011111,
	B11111001,B10011111,
	B11110011,B11001111,
	B11110011,B11001111,
	B11111001,B10011111,
	B11111000,B00011111,
	B11111110,B01111111,
	B11111111,B11111111,
	B11111111,B11111111,
	B00000000,B00000000
};
/*
const unsigned char PROGMEM Resources::camera_inv_bmp[] =
{
	B11111111,B11111111,
	B11111100,B00111111,
	B11110000,B00001111,
	B11110000,B00001111,
	B00000000,B00000000,
	B00000001,B10000000,
	B00000111,B11100000,
	B00000110,B01100000,
	B00001100,B00110000,
	B00001100,B00110000,
	B00000110,B01100000,
	B00000111,B11100000,
	B00000001,B10000000,
	B00000000,B00000000,
	B00000000,B00000000,
	B11111111,B11111111
};
*/
const unsigned char PROGMEM Resources::no_camera_bmp[] =
{
	B00000000,B00000000,
	B00000011,B11000110,
	B00001111,B11101110,
	B00001111,B11011100,
	B11111111,B10111011,
	B11111110,B01110111,
	B11111000,B11101111,
	B11111001,B11011111,
	B11110011,B10001111,
	B11110111,B01001111,
	B11101110,B10011111,
	B11011100,B00011111,
	B10111010,B01111111,
	B01110111,B11111111,
	B01101111,B11111111,
	B00000000,B00000000
};

/*
const unsigned char PROGMEM Resources::no_camera_inv_bmp[] =
{
	B11111111,B11111111,
	B11111100,B00111001,
	B11110000,B00010001,
	B11110000,B00100011,
	B00000000,B01000100,
	B00000001,B10001000,
	B00000111,B00010000,
	B00000110,B00100000,
	B00001100,B01110000,
	B00001000,B10110000,
	B00010001,B01100000,
	B00100011,B11100000,
	B01000101,B10000000,
	B10001000,B00000000,
	B10010000,B00000000,
	B11111111,B11111111
};
*/
Resources::Resources(){
	
}
Resources::~Resources(){
	
}
